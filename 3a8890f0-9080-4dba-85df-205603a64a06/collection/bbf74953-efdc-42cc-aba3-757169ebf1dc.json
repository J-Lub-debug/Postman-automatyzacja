{"info":{"_postman_id":"bbf74953-efdc-42cc-aba3-757169ebf1dc","name":"Testu automatyczne[Trello praktyka]","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"Create new board, test status code 200, isCorrect name in Json Response, save board ID to collection variable","event":[{"listen":"test","script":{"id":"9f341fa4-f74c-4671-abf2-f78e10c5ee94","exec":["\r","\r","pm.test(\"Is status code 200\", () => {\r","    const status = pm.response.status;\r","    pm.expect(status).to.eq(\"OK\");\r","    //pm.response.to.have.status(200);\r","})\r","\r","pm.test(\"Is board name right\", () => {\r","    const jsonBody = pm.response.json();\r","    const boardName = jsonBody.name;\r","    const boardNameToVerify = pm.collectionVariables.get(\"boardName\");\r","    pm.expect(boardName).to.eq(boardNameToVerify);\r","})\r","\r","pm.test(\"Save board ID to collection variables\", () => {\r","    const jsonBody = pm.response.json();\r","    const boardId = jsonBody.id;\r","    pm.expect(boardId.length).is.greaterThan(10);\r","    pm.collectionVariables.set(\"boardID\", boardId); //przekazemy je do tworzenia nowej listy\r","})"],"type":"text/javascript"}}],"id":"44f04b2c-0a2c-4dae-9ae8-a99f8d67cefd","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"url":{"raw":"{{baseUrl}}boards/?name={{boardName}}&key={{key}}&token={{token}}","host":["{{baseUrl}}boards"],"path":[""],"query":[{"key":"name","value":"{{boardName}}"},{"key":"key","value":"{{key}}"},{"key":"token","value":"{{token}}"}]}},"response":[]},{"name":"List all boards - test isStatusCode 200, is all Board names String","event":[{"listen":"test","script":{"id":"87d49848-43ad-47c9-9a4f-078fc725c584","exec":["let resBody;\r","\r","pm.test(\"Is status code 200\", () => {\r","    pm.response.to.have.status(200);\r","})\r","\r","pm.test(\"is board name String\", () => {\r","    resBody = pm.response.json();\r","    resBody.map(board => {\r","        pm.expect(board.name).to.be.a(\"string\");\r","    })\r","})"],"type":"text/javascript"}}],"id":"4abfe493-c4f0-41ae-9908-89e537fd2891","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}/members/me/boards?key={{key}}&token={{token}}","host":["{{baseUrl}}"],"path":["members","me","boards"],"query":[{"key":"key","value":"{{key}}"},{"key":"token","value":"{{token}}"}]}},"response":[]},{"name":"Create a list on a board - test status, test name, save to collection variable","event":[{"listen":"test","script":{"id":"d23cd015-f049-4434-98fc-71b782416b38","exec":["//Board ID z wczesniejszego create board, wiec zrobi to dla ostatniej stworzonej tablicy\r","let resBody;\r","\r","\r","\r","pm.test(\"Is status code 200\", () => {\r","    pm.response.to.have.status(200);\r","    resBody = pm.response.json();\r","})\r","\r","pm.test(\"Is name eq expected name\", () => {\r","    name = resBody.name;\r","    expectedName = pm.collectionVariables.get(\"listName\");\r","    pm.expect(name).to.eq(expectedName);\r","    \r","})\r","\r","pm.test(\"Get list ID to collection variable\", () => {\r","    const listId = resBody.id;\r","    pm.collectionVariables.set(\"listID\", listId);\r","})\r","\r","\r",""],"type":"text/javascript"}}],"id":"45964272-a2d4-4ebf-889d-ec1a9e5c2337","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"url":{"raw":"{{baseUrl}}boards/{{boardID}}/lists?name={{listName}}&key={{key}}&token={{token}}","host":["{{baseUrl}}boards"],"path":["{{boardID}}","lists"],"query":[{"key":"name","value":"{{listName}}"},{"key":"key","value":"{{key}}"},{"key":"token","value":"{{token}}"}]}},"response":[]},{"name":"Get lists on a Board - test status, test for each card if closed is false","event":[{"listen":"test","script":{"id":"2dae2a9c-a253-4d95-afd5-0302579bc7b4","exec":["pm.test(\"Is status code 200\", () => {\r","    pm.response.to.have.status(200);\r","})\r","\r","pm.test(\"Is closed value set by default as false\", () => {\r","    resBody = pm.response.json();\r","    resBody.map(list => {\r","        pm.expect(list.closed).to.eq(false);\r","    })\r","})"],"type":"text/javascript"}}],"id":"e1df8ee7-647c-4e7d-83ff-e4b7681f3c15","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}boards/{{boardID}}/lists?key={{key}}&token={{token}}","host":["{{baseUrl}}boards"],"path":["{{boardID}}","lists"],"query":[{"key":"key","value":"{{key}}"},{"key":"token","value":"{{token}}"}]}},"response":[]},{"name":"Create Card on a list - test status, test listID boardID, save to collection variable","event":[{"listen":"test","script":{"id":"6b569322-8ab4-4d4a-a1b1-6361ecf0d332","exec":["let resBody;\r","\r","pm.test(\"Is status code 200\", () => {\r","    pm.response.to.have.status(200);\r","    resBody = pm.response.json();\r","\r","})\r","\r","pm.test(\"Verify value of id list and id board\", () => {\r","    idList = resBody.idList;\r","    listID = pm.collectionVariables.get(\"listID\");\r","    idBoard = resBody.idBoard;\r","    boardID = pm.collectionVariables.get(\"boardID\");\r","    pm.expect(idList).to.eq(listID);\r","    pm.expect(idBoard).to.eq(boardID);\r","})\r","\r","pm.test(\"Save card id to collection variable\", () => {\r","    cardId = resBody.id;\r","    pm.collectionVariables.set(\"cardID\", cardId);\r","})"],"type":"text/javascript"}}],"id":"c9396fc6-7b6e-407e-87c4-695008bbb683","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"url":{"raw":"{{baseUrl}}cards?idList={{listID}}&name={{cardName}}&key={{key}}&token={{token}}","host":["{{baseUrl}}cards"],"query":[{"key":"idList","value":"{{listID}}"},{"key":"name","value":"{{cardName}}"},{"key":"key","value":"{{key}}"},{"key":"token","value":"{{token}}"}]}},"response":[]},{"name":"Get All card on board - test status, test idBoard and idList, is shortlink present and string","event":[{"listen":"test","script":{"id":"6e2c9e91-1706-4faf-a5d5-906b3b9de0a9","exec":["let resBody;\r","\r","pm.test(\"Is status code 200\", () => {\r","    pm.response.to.have.status(200);\r","    resBody = pm.response.json();\r","})\r","\r","pm.test(\"Are values of idBoard and idList correct\", () => {\r","    listID = pm.collectionVariables.get(\"listID\");\r","    boardID = pm.collectionVariables.get(\"boardID\");\r","    resBody.map(card => {\r","        pm.expect(card.idList).to.eq(listID);\r","        pm.expect(card.idBoard).to.eq(boardID); \r","    }) \r","})\r","\r","pm.test(\"Is shortlink attribute present and is string\", () => {\r","    resBody.map(card => {\r","        pm.expect(card.shortLink).to.not.be.a(\"undefined\");\r","        pm.expect(card.shortLink).to.be.a(\"string\");\r","    })\r","})"],"type":"text/javascript"}}],"id":"a2fd7c10-4bd6-4f84-a416-0ffad8d78024","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}boards/{{boardID}}/cards?key={{key}}&token={{token}}","host":["{{baseUrl}}boards"],"path":["{{boardID}}","cards"],"query":[{"key":"key","value":"{{key}}"},{"key":"token","value":"{{token}}"}]}},"response":[]},{"name":"Update card - test status code, is new description and name present","event":[{"listen":"test","script":{"id":"745dfc54-c3db-479a-bc8a-9e43d75a75e7","exec":["let resBody;\r","\r","pm.test(\"Is status code 200\", () => {\r","    pm.response.to.have.status(200);\r","    resBody = pm.response.json();\r","})\r","\r","pm.test(\"Is new name and new desc present\", () => {\r","    cardName = resBody.name;\r","    updatedCardName = pm.collectionVariables.get(\"updateCardName\");\r","    cardDescription = resBody.desc;\r","    updatedCardDescription = pm.collectionVariables.get(\"updateCardDescription\");\r","    pm.expect(cardName).to.eq(updatedCardName);\r","    pm.expect(cardDescription).to.eq(updatedCardDescription);\r","})"],"type":"text/javascript"}}],"id":"a6c92674-6995-4932-b4c8-b2b2693385b9","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"PUT","header":[],"url":{"raw":"{{baseUrl}}cards/{{cardID}}?name={{updateCardName}}&desc={{updateCardDescription}}&key={{key}}&token={{token}}","host":["{{baseUrl}}cards"],"path":["{{cardID}}"],"query":[{"key":"name","value":"{{updateCardName}}"},{"key":"desc","value":"{{updateCardDescription}}"},{"key":"key","value":"{{key}}"},{"key":"token","value":"{{token}}"}]}},"response":[]},{"name":"Delete a card - test status","event":[{"listen":"test","script":{"id":"2ea34eb3-13ab-477b-b0f6-cf824163def8","exec":["pm.test(\"Is status code 200\", () => {\r","    pm.response.to.have.status(200);\r","})"],"type":"text/javascript"}}],"id":"c3d5cfeb-c0ce-4990-a89b-8bc106c9478e","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"{{baseUrl}}cards/{{cardID}}?key={{key}}&token={{token}}","host":["{{baseUrl}}cards"],"path":["{{cardID}}"],"query":[{"key":"key","value":"{{key}}"},{"key":"token","value":"{{token}}"}]}},"response":[]},{"name":"Delete the board","event":[{"listen":"test","script":{"id":"36cf1158-c486-4b43-a7e3-c6101fa86041","exec":["pm.test(\"Is status code 200\", () => {\r","    pm.response.to.have.status(200);\r","})"],"type":"text/javascript"}}],"id":"f286b9c7-de6c-4d0c-8c7d-e5e98064148d","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"DELETE","header":[],"url":{"raw":"{{baseUrl}}boards/{{boardID}}?key={{key}}&token={{token}}","host":["{{baseUrl}}boards"],"path":["{{boardID}}"],"query":[{"key":"key","value":"{{key}}"},{"key":"token","value":"{{token}}"}]}},"response":[]}],"event":[{"listen":"prerequest","script":{"id":"51a6211c-9588-432b-bdbc-36e82a83ec97","type":"text/javascript","exec":[""]}},{"listen":"test","script":{"id":"0c5c66b4-5555-4ead-9868-d2b9704b51e9","type":"text/javascript","exec":[""]}}],"variable":[{"id":"f936a15e-6565-4388-8965-1198c29b8605","key":"baseUrl","value":"https://api.trello.com/1/","type":"string"},{"id":"aec06902-e6a9-483e-9ce1-f0987bf6e87b","key":"boardName","value":"Tablica z API 2","type":"string"},{"id":"cb4b3331-3996-4b89-9ed5-ad0ed0d05225","key":"boardID","value":""},{"id":"a23b6004-96db-4d12-a8c9-ffc4bf2a8ad6","key":"listName","value":"New list","type":"string"},{"id":"ba4e59ae-e06b-4d56-a05b-4bdcd19615d5","key":"listID","value":""},{"id":"6c6ff5a9-df30-493e-a9d9-6980389c5bd7","key":"cardName","value":"New card","type":"string"},{"id":"6bb8f88d-8482-45f7-a8c1-f874d21755f3","key":"cardID","value":""},{"id":"07ed9a6e-b471-4b22-8531-869163d18084","key":"updateCardName","value":"New card name","type":"string"},{"id":"fcff1ec4-b973-466d-931d-2aeb96210060","key":"updateCardDescription","value":"card description","type":"string"}]}